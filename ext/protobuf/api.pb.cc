// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_api_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RICControlHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RICControlMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RICE2APHeader;
}  // namespace protobuf_api_2eproto
namespace api {
class RICE2APHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RICE2APHeader>
      _instance;
} _RICE2APHeader_default_instance_;
class RICControlHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RICControlHeader>
      _instance;
} _RICControlHeader_default_instance_;
class RICControlMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RICControlMessage>
      _instance;
} _RICControlMessage_default_instance_;
class RicControlGrpcReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RicControlGrpcReq>
      _instance;
} _RicControlGrpcReq_default_instance_;
class RicControlGrpcRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RicControlGrpcRsp>
      _instance;
} _RicControlGrpcRsp_default_instance_;
}  // namespace api
namespace protobuf_api_2eproto {
static void InitDefaultsRICE2APHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RICE2APHeader_default_instance_;
    new (ptr) ::api::RICE2APHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RICE2APHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RICE2APHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRICE2APHeader}, {}};

static void InitDefaultsRICControlHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RICControlHeader_default_instance_;
    new (ptr) ::api::RICControlHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RICControlHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RICControlHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRICControlHeader}, {}};

static void InitDefaultsRICControlMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RICControlMessage_default_instance_;
    new (ptr) ::api::RICControlMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RICControlMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RICControlMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRICControlMessage}, {}};

static void InitDefaultsRicControlGrpcReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RicControlGrpcReq_default_instance_;
    new (ptr) ::api::RicControlGrpcReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RicControlGrpcReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RicControlGrpcReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRicControlGrpcReq}, {
      &protobuf_api_2eproto::scc_info_RICE2APHeader.base,
      &protobuf_api_2eproto::scc_info_RICControlHeader.base,
      &protobuf_api_2eproto::scc_info_RICControlMessage.base,}};

static void InitDefaultsRicControlGrpcRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RicControlGrpcRsp_default_instance_;
    new (ptr) ::api::RicControlGrpcRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RicControlGrpcRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RicControlGrpcRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRicControlGrpcRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RICE2APHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RICControlHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RICControlMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RicControlGrpcReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RicControlGrpcRsp.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICE2APHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICE2APHeader, ranfuncid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICE2APHeader, ricrequestorid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlHeader, controlstyle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlHeader, controlactionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlHeader, ueid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlMessage, riccontrolcelltypeval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RICControlMessage, targetcellid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, e2nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, plmnid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, ranname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, rice2apheaderdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, riccontrolheaderdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, riccontrolmessagedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcReq, riccontrolackreqval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcRsp, rspcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RicControlGrpcRsp, description_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::RICE2APHeader)},
  { 7, -1, sizeof(::api::RICControlHeader)},
  { 15, -1, sizeof(::api::RICControlMessage)},
  { 22, -1, sizeof(::api::RicControlGrpcReq)},
  { 34, -1, sizeof(::api::RicControlGrpcRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RICE2APHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RICControlHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RICControlMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RicControlGrpcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RicControlGrpcRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tapi.proto\022\003api\":\n\rRICE2APHeader\022\021\n\tRan"
      "FuncId\030\001 \001(\003\022\026\n\016RICRequestorID\030\002 \001(\003\"O\n\020"
      "RICControlHeader\022\024\n\014ControlStyle\030\001 \001(\003\022\027"
      "\n\017ControlActionId\030\002 \001(\003\022\014\n\004UEID\030\003 \001(\t\"e\n"
      "\021RICControlMessage\022:\n\025RICControlCellType"
      "Val\030\001 \001(\0162\033.api.RICControlCellTypeEnum\022\024"
      "\n\014TargetCellID\030\002 \001(\t\"\226\002\n\021RicControlGrpcR"
      "eq\022\020\n\010e2NodeID\030\001 \001(\t\022\016\n\006plmnID\030\002 \001(\t\022\017\n\007"
      "ranName\030\003 \001(\t\022-\n\021RICE2APHeaderData\030\004 \001(\013"
      "2\022.api.RICE2APHeader\0223\n\024RICControlHeader"
      "Data\030\005 \001(\0132\025.api.RICControlHeader\0225\n\025RIC"
      "ControlMessageData\030\006 \001(\0132\026.api.RICContro"
      "lMessage\0223\n\023RICControlAckReqVal\030\007 \001(\0162\026."
      "api.RICControlAckEnum\"9\n\021RicControlGrpcR"
      "sp\022\017\n\007rspCode\030\001 \001(\005\022\023\n\013description\030\002 \001(\t"
      "*k\n\026RICControlCellTypeEnum\022\033\n\027RIC_CONTRO"
      "L_CELL_UNKWON\020\000\022\027\n\023RIC_CONTROL_NR_CELL\020\001"
      "\022\033\n\027RIC_CONTROL_EUTRAN_CELL\020\002*r\n\021RICCont"
      "rolAckEnum\022\032\n\026RIC_CONTROL_ACK_UNKWON\020\000\022\026"
      "\n\022RIC_CONTROL_NO_ACK\020\001\022\023\n\017RIC_CONTROL_AC"
      "K\020\002\022\024\n\020RIC_CONTROL_NACK\020\0032Y\n\007MsgComm\022N\n\034"
      "SendRICControlReqServiceGrpc\022\026.api.RicCo"
      "ntrolGrpcReq\032\026.api.RicControlGrpcRspb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 924);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2eproto
namespace api {
const ::google::protobuf::EnumDescriptor* RICControlCellTypeEnum_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[0];
}
bool RICControlCellTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RICControlAckEnum_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[1];
}
bool RICControlAckEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RICE2APHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RICE2APHeader::kRanFuncIdFieldNumber;
const int RICE2APHeader::kRICRequestorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RICE2APHeader::RICE2APHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RICE2APHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RICE2APHeader)
}
RICE2APHeader::RICE2APHeader(const RICE2APHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ranfuncid_, &from.ranfuncid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ricrequestorid_) -
    reinterpret_cast<char*>(&ranfuncid_)) + sizeof(ricrequestorid_));
  // @@protoc_insertion_point(copy_constructor:api.RICE2APHeader)
}

void RICE2APHeader::SharedCtor() {
  ::memset(&ranfuncid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ricrequestorid_) -
      reinterpret_cast<char*>(&ranfuncid_)) + sizeof(ricrequestorid_));
}

RICE2APHeader::~RICE2APHeader() {
  // @@protoc_insertion_point(destructor:api.RICE2APHeader)
  SharedDtor();
}

void RICE2APHeader::SharedDtor() {
}

void RICE2APHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RICE2APHeader::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RICE2APHeader& RICE2APHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RICE2APHeader.base);
  return *internal_default_instance();
}


void RICE2APHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RICE2APHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ranfuncid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ricrequestorid_) -
      reinterpret_cast<char*>(&ranfuncid_)) + sizeof(ricrequestorid_));
  _internal_metadata_.Clear();
}

bool RICE2APHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RICE2APHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 RanFuncId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ranfuncid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RICRequestorID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ricrequestorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RICE2APHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RICE2APHeader)
  return false;
#undef DO_
}

void RICE2APHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RICE2APHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RanFuncId = 1;
  if (this->ranfuncid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ranfuncid(), output);
  }

  // int64 RICRequestorID = 2;
  if (this->ricrequestorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ricrequestorid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RICE2APHeader)
}

::google::protobuf::uint8* RICE2APHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RICE2APHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RanFuncId = 1;
  if (this->ranfuncid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ranfuncid(), target);
  }

  // int64 RICRequestorID = 2;
  if (this->ricrequestorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ricrequestorid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RICE2APHeader)
  return target;
}

size_t RICE2APHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RICE2APHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 RanFuncId = 1;
  if (this->ranfuncid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ranfuncid());
  }

  // int64 RICRequestorID = 2;
  if (this->ricrequestorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ricrequestorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RICE2APHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RICE2APHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RICE2APHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RICE2APHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RICE2APHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RICE2APHeader)
    MergeFrom(*source);
  }
}

void RICE2APHeader::MergeFrom(const RICE2APHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RICE2APHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ranfuncid() != 0) {
    set_ranfuncid(from.ranfuncid());
  }
  if (from.ricrequestorid() != 0) {
    set_ricrequestorid(from.ricrequestorid());
  }
}

void RICE2APHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RICE2APHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RICE2APHeader::CopyFrom(const RICE2APHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RICE2APHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RICE2APHeader::IsInitialized() const {
  return true;
}

void RICE2APHeader::Swap(RICE2APHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RICE2APHeader::InternalSwap(RICE2APHeader* other) {
  using std::swap;
  swap(ranfuncid_, other->ranfuncid_);
  swap(ricrequestorid_, other->ricrequestorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RICE2APHeader::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RICControlHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RICControlHeader::kControlStyleFieldNumber;
const int RICControlHeader::kControlActionIdFieldNumber;
const int RICControlHeader::kUEIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RICControlHeader::RICControlHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RICControlHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RICControlHeader)
}
RICControlHeader::RICControlHeader(const RICControlHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ueid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ueid().size() > 0) {
    ueid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ueid_);
  }
  ::memcpy(&controlstyle_, &from.controlstyle_,
    static_cast<size_t>(reinterpret_cast<char*>(&controlactionid_) -
    reinterpret_cast<char*>(&controlstyle_)) + sizeof(controlactionid_));
  // @@protoc_insertion_point(copy_constructor:api.RICControlHeader)
}

void RICControlHeader::SharedCtor() {
  ueid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&controlstyle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&controlactionid_) -
      reinterpret_cast<char*>(&controlstyle_)) + sizeof(controlactionid_));
}

RICControlHeader::~RICControlHeader() {
  // @@protoc_insertion_point(destructor:api.RICControlHeader)
  SharedDtor();
}

void RICControlHeader::SharedDtor() {
  ueid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RICControlHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RICControlHeader::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RICControlHeader& RICControlHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RICControlHeader.base);
  return *internal_default_instance();
}


void RICControlHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RICControlHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ueid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&controlstyle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&controlactionid_) -
      reinterpret_cast<char*>(&controlstyle_)) + sizeof(controlactionid_));
  _internal_metadata_.Clear();
}

bool RICControlHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RICControlHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ControlStyle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &controlstyle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ControlActionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &controlactionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UEID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ueid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ueid().data(), static_cast<int>(this->ueid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RICControlHeader.UEID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RICControlHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RICControlHeader)
  return false;
#undef DO_
}

void RICControlHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RICControlHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ControlStyle = 1;
  if (this->controlstyle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->controlstyle(), output);
  }

  // int64 ControlActionId = 2;
  if (this->controlactionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->controlactionid(), output);
  }

  // string UEID = 3;
  if (this->ueid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ueid().data(), static_cast<int>(this->ueid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RICControlHeader.UEID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ueid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RICControlHeader)
}

::google::protobuf::uint8* RICControlHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RICControlHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ControlStyle = 1;
  if (this->controlstyle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->controlstyle(), target);
  }

  // int64 ControlActionId = 2;
  if (this->controlactionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->controlactionid(), target);
  }

  // string UEID = 3;
  if (this->ueid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ueid().data(), static_cast<int>(this->ueid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RICControlHeader.UEID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ueid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RICControlHeader)
  return target;
}

size_t RICControlHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RICControlHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string UEID = 3;
  if (this->ueid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ueid());
  }

  // int64 ControlStyle = 1;
  if (this->controlstyle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->controlstyle());
  }

  // int64 ControlActionId = 2;
  if (this->controlactionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->controlactionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RICControlHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RICControlHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RICControlHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RICControlHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RICControlHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RICControlHeader)
    MergeFrom(*source);
  }
}

void RICControlHeader::MergeFrom(const RICControlHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RICControlHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ueid().size() > 0) {

    ueid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ueid_);
  }
  if (from.controlstyle() != 0) {
    set_controlstyle(from.controlstyle());
  }
  if (from.controlactionid() != 0) {
    set_controlactionid(from.controlactionid());
  }
}

void RICControlHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RICControlHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RICControlHeader::CopyFrom(const RICControlHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RICControlHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RICControlHeader::IsInitialized() const {
  return true;
}

void RICControlHeader::Swap(RICControlHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RICControlHeader::InternalSwap(RICControlHeader* other) {
  using std::swap;
  ueid_.Swap(&other->ueid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(controlstyle_, other->controlstyle_);
  swap(controlactionid_, other->controlactionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RICControlHeader::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RICControlMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RICControlMessage::kRICControlCellTypeValFieldNumber;
const int RICControlMessage::kTargetCellIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RICControlMessage::RICControlMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RICControlMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RICControlMessage)
}
RICControlMessage::RICControlMessage(const RICControlMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetcellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetcellid().size() > 0) {
    targetcellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcellid_);
  }
  riccontrolcelltypeval_ = from.riccontrolcelltypeval_;
  // @@protoc_insertion_point(copy_constructor:api.RICControlMessage)
}

void RICControlMessage::SharedCtor() {
  targetcellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  riccontrolcelltypeval_ = 0;
}

RICControlMessage::~RICControlMessage() {
  // @@protoc_insertion_point(destructor:api.RICControlMessage)
  SharedDtor();
}

void RICControlMessage::SharedDtor() {
  targetcellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RICControlMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RICControlMessage::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RICControlMessage& RICControlMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RICControlMessage.base);
  return *internal_default_instance();
}


void RICControlMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RICControlMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetcellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  riccontrolcelltypeval_ = 0;
  _internal_metadata_.Clear();
}

bool RICControlMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RICControlMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.RICControlCellTypeEnum RICControlCellTypeVal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_riccontrolcelltypeval(static_cast< ::api::RICControlCellTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TargetCellID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetcellid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetcellid().data(), static_cast<int>(this->targetcellid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RICControlMessage.TargetCellID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RICControlMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RICControlMessage)
  return false;
#undef DO_
}

void RICControlMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RICControlMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.RICControlCellTypeEnum RICControlCellTypeVal = 1;
  if (this->riccontrolcelltypeval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->riccontrolcelltypeval(), output);
  }

  // string TargetCellID = 2;
  if (this->targetcellid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcellid().data(), static_cast<int>(this->targetcellid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RICControlMessage.TargetCellID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->targetcellid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RICControlMessage)
}

::google::protobuf::uint8* RICControlMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RICControlMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.RICControlCellTypeEnum RICControlCellTypeVal = 1;
  if (this->riccontrolcelltypeval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->riccontrolcelltypeval(), target);
  }

  // string TargetCellID = 2;
  if (this->targetcellid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcellid().data(), static_cast<int>(this->targetcellid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RICControlMessage.TargetCellID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->targetcellid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RICControlMessage)
  return target;
}

size_t RICControlMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RICControlMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string TargetCellID = 2;
  if (this->targetcellid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetcellid());
  }

  // .api.RICControlCellTypeEnum RICControlCellTypeVal = 1;
  if (this->riccontrolcelltypeval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->riccontrolcelltypeval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RICControlMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RICControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RICControlMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RICControlMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RICControlMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RICControlMessage)
    MergeFrom(*source);
  }
}

void RICControlMessage::MergeFrom(const RICControlMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RICControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcellid().size() > 0) {

    targetcellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcellid_);
  }
  if (from.riccontrolcelltypeval() != 0) {
    set_riccontrolcelltypeval(from.riccontrolcelltypeval());
  }
}

void RICControlMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RICControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RICControlMessage::CopyFrom(const RICControlMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RICControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RICControlMessage::IsInitialized() const {
  return true;
}

void RICControlMessage::Swap(RICControlMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RICControlMessage::InternalSwap(RICControlMessage* other) {
  using std::swap;
  targetcellid_.Swap(&other->targetcellid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(riccontrolcelltypeval_, other->riccontrolcelltypeval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RICControlMessage::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RicControlGrpcReq::InitAsDefaultInstance() {
  ::api::_RicControlGrpcReq_default_instance_._instance.get_mutable()->rice2apheaderdata_ = const_cast< ::api::RICE2APHeader*>(
      ::api::RICE2APHeader::internal_default_instance());
  ::api::_RicControlGrpcReq_default_instance_._instance.get_mutable()->riccontrolheaderdata_ = const_cast< ::api::RICControlHeader*>(
      ::api::RICControlHeader::internal_default_instance());
  ::api::_RicControlGrpcReq_default_instance_._instance.get_mutable()->riccontrolmessagedata_ = const_cast< ::api::RICControlMessage*>(
      ::api::RICControlMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RicControlGrpcReq::kE2NodeIDFieldNumber;
const int RicControlGrpcReq::kPlmnIDFieldNumber;
const int RicControlGrpcReq::kRanNameFieldNumber;
const int RicControlGrpcReq::kRICE2APHeaderDataFieldNumber;
const int RicControlGrpcReq::kRICControlHeaderDataFieldNumber;
const int RicControlGrpcReq::kRICControlMessageDataFieldNumber;
const int RicControlGrpcReq::kRICControlAckReqValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RicControlGrpcReq::RicControlGrpcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RicControlGrpcReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RicControlGrpcReq)
}
RicControlGrpcReq::RicControlGrpcReq(const RicControlGrpcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  e2nodeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e2nodeid().size() > 0) {
    e2nodeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e2nodeid_);
  }
  plmnid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plmnid().size() > 0) {
    plmnid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plmnid_);
  }
  ranname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ranname().size() > 0) {
    ranname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ranname_);
  }
  if (from.has_rice2apheaderdata()) {
    rice2apheaderdata_ = new ::api::RICE2APHeader(*from.rice2apheaderdata_);
  } else {
    rice2apheaderdata_ = NULL;
  }
  if (from.has_riccontrolheaderdata()) {
    riccontrolheaderdata_ = new ::api::RICControlHeader(*from.riccontrolheaderdata_);
  } else {
    riccontrolheaderdata_ = NULL;
  }
  if (from.has_riccontrolmessagedata()) {
    riccontrolmessagedata_ = new ::api::RICControlMessage(*from.riccontrolmessagedata_);
  } else {
    riccontrolmessagedata_ = NULL;
  }
  riccontrolackreqval_ = from.riccontrolackreqval_;
  // @@protoc_insertion_point(copy_constructor:api.RicControlGrpcReq)
}

void RicControlGrpcReq::SharedCtor() {
  e2nodeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plmnid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rice2apheaderdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&riccontrolackreqval_) -
      reinterpret_cast<char*>(&rice2apheaderdata_)) + sizeof(riccontrolackreqval_));
}

RicControlGrpcReq::~RicControlGrpcReq() {
  // @@protoc_insertion_point(destructor:api.RicControlGrpcReq)
  SharedDtor();
}

void RicControlGrpcReq::SharedDtor() {
  e2nodeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plmnid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rice2apheaderdata_;
  if (this != internal_default_instance()) delete riccontrolheaderdata_;
  if (this != internal_default_instance()) delete riccontrolmessagedata_;
}

void RicControlGrpcReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RicControlGrpcReq::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RicControlGrpcReq& RicControlGrpcReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RicControlGrpcReq.base);
  return *internal_default_instance();
}


void RicControlGrpcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RicControlGrpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  e2nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plmnid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rice2apheaderdata_ != NULL) {
    delete rice2apheaderdata_;
  }
  rice2apheaderdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && riccontrolheaderdata_ != NULL) {
    delete riccontrolheaderdata_;
  }
  riccontrolheaderdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && riccontrolmessagedata_ != NULL) {
    delete riccontrolmessagedata_;
  }
  riccontrolmessagedata_ = NULL;
  riccontrolackreqval_ = 0;
  _internal_metadata_.Clear();
}

bool RicControlGrpcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RicControlGrpcReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string e2NodeID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_e2nodeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->e2nodeid().data(), static_cast<int>(this->e2nodeid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RicControlGrpcReq.e2NodeID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plmnID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plmnid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plmnid().data(), static_cast<int>(this->plmnid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RicControlGrpcReq.plmnID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ranName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ranname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ranname().data(), static_cast<int>(this->ranname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RicControlGrpcReq.ranName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.RICE2APHeader RICE2APHeaderData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rice2apheaderdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.RICControlHeader RICControlHeaderData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_riccontrolheaderdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.RICControlMessage RICControlMessageData = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_riccontrolmessagedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.RICControlAckEnum RICControlAckReqVal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_riccontrolackreqval(static_cast< ::api::RICControlAckEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RicControlGrpcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RicControlGrpcReq)
  return false;
#undef DO_
}

void RicControlGrpcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RicControlGrpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string e2NodeID = 1;
  if (this->e2nodeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e2nodeid().data(), static_cast<int>(this->e2nodeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcReq.e2NodeID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->e2nodeid(), output);
  }

  // string plmnID = 2;
  if (this->plmnid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plmnid().data(), static_cast<int>(this->plmnid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcReq.plmnID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plmnid(), output);
  }

  // string ranName = 3;
  if (this->ranname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ranname().data(), static_cast<int>(this->ranname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcReq.ranName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ranname(), output);
  }

  // .api.RICE2APHeader RICE2APHeaderData = 4;
  if (this->has_rice2apheaderdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rice2apheaderdata(), output);
  }

  // .api.RICControlHeader RICControlHeaderData = 5;
  if (this->has_riccontrolheaderdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_riccontrolheaderdata(), output);
  }

  // .api.RICControlMessage RICControlMessageData = 6;
  if (this->has_riccontrolmessagedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_riccontrolmessagedata(), output);
  }

  // .api.RICControlAckEnum RICControlAckReqVal = 7;
  if (this->riccontrolackreqval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->riccontrolackreqval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RicControlGrpcReq)
}

::google::protobuf::uint8* RicControlGrpcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RicControlGrpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string e2NodeID = 1;
  if (this->e2nodeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e2nodeid().data(), static_cast<int>(this->e2nodeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcReq.e2NodeID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->e2nodeid(), target);
  }

  // string plmnID = 2;
  if (this->plmnid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plmnid().data(), static_cast<int>(this->plmnid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcReq.plmnID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plmnid(), target);
  }

  // string ranName = 3;
  if (this->ranname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ranname().data(), static_cast<int>(this->ranname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcReq.ranName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ranname(), target);
  }

  // .api.RICE2APHeader RICE2APHeaderData = 4;
  if (this->has_rice2apheaderdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rice2apheaderdata(), deterministic, target);
  }

  // .api.RICControlHeader RICControlHeaderData = 5;
  if (this->has_riccontrolheaderdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_riccontrolheaderdata(), deterministic, target);
  }

  // .api.RICControlMessage RICControlMessageData = 6;
  if (this->has_riccontrolmessagedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_riccontrolmessagedata(), deterministic, target);
  }

  // .api.RICControlAckEnum RICControlAckReqVal = 7;
  if (this->riccontrolackreqval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->riccontrolackreqval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RicControlGrpcReq)
  return target;
}

size_t RicControlGrpcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RicControlGrpcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string e2NodeID = 1;
  if (this->e2nodeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->e2nodeid());
  }

  // string plmnID = 2;
  if (this->plmnid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plmnid());
  }

  // string ranName = 3;
  if (this->ranname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ranname());
  }

  // .api.RICE2APHeader RICE2APHeaderData = 4;
  if (this->has_rice2apheaderdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rice2apheaderdata_);
  }

  // .api.RICControlHeader RICControlHeaderData = 5;
  if (this->has_riccontrolheaderdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *riccontrolheaderdata_);
  }

  // .api.RICControlMessage RICControlMessageData = 6;
  if (this->has_riccontrolmessagedata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *riccontrolmessagedata_);
  }

  // .api.RICControlAckEnum RICControlAckReqVal = 7;
  if (this->riccontrolackreqval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->riccontrolackreqval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RicControlGrpcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RicControlGrpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RicControlGrpcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RicControlGrpcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RicControlGrpcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RicControlGrpcReq)
    MergeFrom(*source);
  }
}

void RicControlGrpcReq::MergeFrom(const RicControlGrpcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RicControlGrpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.e2nodeid().size() > 0) {

    e2nodeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e2nodeid_);
  }
  if (from.plmnid().size() > 0) {

    plmnid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plmnid_);
  }
  if (from.ranname().size() > 0) {

    ranname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ranname_);
  }
  if (from.has_rice2apheaderdata()) {
    mutable_rice2apheaderdata()->::api::RICE2APHeader::MergeFrom(from.rice2apheaderdata());
  }
  if (from.has_riccontrolheaderdata()) {
    mutable_riccontrolheaderdata()->::api::RICControlHeader::MergeFrom(from.riccontrolheaderdata());
  }
  if (from.has_riccontrolmessagedata()) {
    mutable_riccontrolmessagedata()->::api::RICControlMessage::MergeFrom(from.riccontrolmessagedata());
  }
  if (from.riccontrolackreqval() != 0) {
    set_riccontrolackreqval(from.riccontrolackreqval());
  }
}

void RicControlGrpcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RicControlGrpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RicControlGrpcReq::CopyFrom(const RicControlGrpcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RicControlGrpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RicControlGrpcReq::IsInitialized() const {
  return true;
}

void RicControlGrpcReq::Swap(RicControlGrpcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RicControlGrpcReq::InternalSwap(RicControlGrpcReq* other) {
  using std::swap;
  e2nodeid_.Swap(&other->e2nodeid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plmnid_.Swap(&other->plmnid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ranname_.Swap(&other->ranname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rice2apheaderdata_, other->rice2apheaderdata_);
  swap(riccontrolheaderdata_, other->riccontrolheaderdata_);
  swap(riccontrolmessagedata_, other->riccontrolmessagedata_);
  swap(riccontrolackreqval_, other->riccontrolackreqval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RicControlGrpcReq::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RicControlGrpcRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RicControlGrpcRsp::kRspCodeFieldNumber;
const int RicControlGrpcRsp::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RicControlGrpcRsp::RicControlGrpcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RicControlGrpcRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RicControlGrpcRsp)
}
RicControlGrpcRsp::RicControlGrpcRsp(const RicControlGrpcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  rspcode_ = from.rspcode_;
  // @@protoc_insertion_point(copy_constructor:api.RicControlGrpcRsp)
}

void RicControlGrpcRsp::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspcode_ = 0;
}

RicControlGrpcRsp::~RicControlGrpcRsp() {
  // @@protoc_insertion_point(destructor:api.RicControlGrpcRsp)
  SharedDtor();
}

void RicControlGrpcRsp::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RicControlGrpcRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RicControlGrpcRsp::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RicControlGrpcRsp& RicControlGrpcRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RicControlGrpcRsp.base);
  return *internal_default_instance();
}


void RicControlGrpcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RicControlGrpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspcode_ = 0;
  _internal_metadata_.Clear();
}

bool RicControlGrpcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RicControlGrpcRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rspCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rspcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RicControlGrpcRsp.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RicControlGrpcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RicControlGrpcRsp)
  return false;
#undef DO_
}

void RicControlGrpcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RicControlGrpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rspCode = 1;
  if (this->rspcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rspcode(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcRsp.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RicControlGrpcRsp)
}

::google::protobuf::uint8* RicControlGrpcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RicControlGrpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rspCode = 1;
  if (this->rspcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rspcode(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RicControlGrpcRsp.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RicControlGrpcRsp)
  return target;
}

size_t RicControlGrpcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RicControlGrpcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int32 rspCode = 1;
  if (this->rspcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rspcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RicControlGrpcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RicControlGrpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RicControlGrpcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RicControlGrpcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RicControlGrpcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RicControlGrpcRsp)
    MergeFrom(*source);
  }
}

void RicControlGrpcRsp::MergeFrom(const RicControlGrpcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RicControlGrpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.rspcode() != 0) {
    set_rspcode(from.rspcode());
  }
}

void RicControlGrpcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RicControlGrpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RicControlGrpcRsp::CopyFrom(const RicControlGrpcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RicControlGrpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RicControlGrpcRsp::IsInitialized() const {
  return true;
}

void RicControlGrpcRsp::Swap(RicControlGrpcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RicControlGrpcRsp::InternalSwap(RicControlGrpcRsp* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rspcode_, other->rspcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RicControlGrpcRsp::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RICE2APHeader* Arena::CreateMaybeMessage< ::api::RICE2APHeader >(Arena* arena) {
  return Arena::CreateInternal< ::api::RICE2APHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RICControlHeader* Arena::CreateMaybeMessage< ::api::RICControlHeader >(Arena* arena) {
  return Arena::CreateInternal< ::api::RICControlHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RICControlMessage* Arena::CreateMaybeMessage< ::api::RICControlMessage >(Arena* arena) {
  return Arena::CreateInternal< ::api::RICControlMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RicControlGrpcReq* Arena::CreateMaybeMessage< ::api::RicControlGrpcReq >(Arena* arena) {
  return Arena::CreateInternal< ::api::RicControlGrpcReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RicControlGrpcRsp* Arena::CreateMaybeMessage< ::api::RicControlGrpcRsp >(Arena* arena) {
  return Arena::CreateInternal< ::api::RicControlGrpcRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
